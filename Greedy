Given n activities defined by its start time and end time, the maximum number 
of activities such that no two activities overlap.

case=1
input=5
5 7
1 4
0 6
8 9
3 5
output=
[1, 4]
[5, 7]
[8, 9]

case=2
input=3
0 30
5 10
15 20
output=[5, 10]
[15, 20]


import java.util.*;
public class test{
    public static List<List<Integer>> activities(int arr[][],int n){
        List<List<Integer>> l=new ArrayList<>();
        Arrays.sort(arr,Comparator.comparingInt(a->a[1]));
        
        l.add(Arrays.asList(arr[0][0],arr[0][1]));
        int lastEndTime=arr[0][1];
        for(int i=1;i<n;i++){
           if(arr[i][0]>=lastEndTime){
               l.add(Arrays.asList(arr[i][0],arr[i][1]));
               lastEndTime=arr[i][1];
           }
        }
        return l;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[][]=new int[n][2];
        for(int i=0;i<arr.length;i++){
            for(int j=0;j<2;j++){
                arr[i][j]=sc.nextInt();
            }
        }
       List<List<Integer>> act=activities(arr,n);
       for(List<Integer> ll:act){
           System.out.println(ll);
       }
    }
}
